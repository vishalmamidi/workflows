name: build and push image to github container registry

on:
  workflow_call:
    inputs:
      RUNS_ON:
        required: false
        type: string
        default: "ubuntu-latest"

  #Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  REGISTRY2: quay.io
  REGISTRY3: docker.io
  IMAGE_NAME: ${{ github.repository }}
  IMAGE_TAG:  0.${{ github.RUN_NUMBER }}.0  #//${{ github.sha }}

  KAFKA_BOOTSTRAP_SERVERS: localhost:9092
  REDIS_HOST: localhost
  REDIS_PASSWORD: "password"
  REDIS_PORT: 6379
  REDIS_USERNAME: "user"
  #SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  #SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  MONGODB_URI: mongodb://root:password@localhost:27017

jobs:
  build-and-push-image:
    name: üõ†Ô∏è
    runs-on: ${{ inputs.RUNS_ON }}

    services:
      redis:
        image: bitnami/redis:latest
        env:
          REDIS_PASSWORD: password
        ports:
          - 6379:6379

    permissions:
      contents: read
      packages: write
      pages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          cache: 'gradle'

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        id: build
        run: ./gradlew build

      - name: Upload Jacoco Test Converage Artifact
        if: ${{ github.event_name == 'push' }}
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build/reports/jacoco/test/html/.' # The folder the action should deploy.
        continue-on-error: true

      - name: Upload Jacoco Test Converage Artifact
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: ./build/reports/jacoco/test/html/.

      - name: SonarQube analyze
        if: job.steps.build.status == success() || job.steps.build.status == failure()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: ./gradlew sonarqube --info
        continue-on-error: true

      # for timezones https://momentjs.com/timezone/

      - name: Extract metadata (tags, labels) for registry
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            #${{ env.REGISTRY2 }}/${{ env.IMAGE_NAME }}
            #${{ env.REGISTRY3 }}/${{ env.IMAGE_NAME }}

          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=raw,value=latest
            type=raw,value={{date 'YYYYMMDD-hhmmss' tz='Asia/Kolkata'}}
          labels: |
            org.opencontainers.image.description="${{ github.event.head_commit.message }}"

      - name: Log in to the GHCR Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - name: Login Quay
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY2 }}
          username: ${{ github.actor }}
          password: ${{ secrets.QUAY_TOKEN }}
        continue-on-error: true

      - name: Login Dockerhub
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY3 }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
        
      - name: Build and Push Image to Container Registry
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

