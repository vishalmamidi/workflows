name: build and push image to github container registry

on:
  workflow_call:

  #Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  CLUSTER_RESOURCE_GROUP: my_group
  CLUSTER_NAME: demo-aks
  CLUSTER_NAMESPACE: demo-namespace
  IMAGE_TAG: 0.${{ github.RUN_NUMBER }}.0

jobs:
  build-and-push-image:
    name: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Java 17 (GraalVM)
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '17'
          components: 'native-image'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        id: build
        env:
          mongodb_host: localhost
        run: ./gradlew build

      - name: Deploy Coverage to GitHub Pages
        if: job.steps.build.status == success() || job.steps.build.status == failure()
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build/reports/jacoco/test/html # The folder the action should deploy.
        continue-on-error: true

      - name: Extract metadata (tags, labels) for registry
        id: meta
        uses: docker/metadata-action@master
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.IMAGE_TAG }}
            type=raw,value=latest
          labels: |
            org.opencontainers.image.description="${{ github.event.head_commit.message }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2.4.0

      - name: Build and Push Image to Container Registry
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Login Quay
        uses: docker/login-action@v2
        with:
          registry: 'quay.io'
          username: ${{ github.actor }}
          password: ${{ secrets.QUAY_TOKEN }}
        continue-on-error: true

      - name: Login Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        continue-on-error: true
        
      - name: Push image
        uses: akhilerm/tag-push-action@v2.0.0
        with:
          src: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          dst: |
            docker.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            docker.io/${{ env.IMAGE_NAME }}:latest
            
            quay.io/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            quay.io/${{ env.IMAGE_NAME }}:latest  
            
        continue-on-error: true

